# Concrete types for abstract algebraic rings:
for (symbol, ring) ‚àà pairs((ùîΩ‚ÇÇ=Bool, ‚Ñ§=Int, ‚Ñö=Rational, ‚Ñù=Float64, ‚ÑÇ=ComplexF64))
    @eval const $symbol = $ring
    @eval export $symbol
    @eval getsymbol(::Type{$ring}) = $(Meta.quot(symbol))
end
getsymbol(T::Type) = Symbol(T)
const RealField = Union{‚Ñö, AbstractFloat} # A formally real field, in the abstract algebraic sense.
